# Mark Shust's Docker Configuration for Magento
# (https://github.com/markshust/docker-magento)
#
# Version 39.0.2

version: "3"

services:
  app:
    build: images/nginx
    ports:
      - "8080:8000"
      - "443:8443"
    links:
      - db
      - phpfpm
    volumes: &appvolumes
      - ~/.composer:/var/www/.composer:cached
      - appdata:/var/www/html
      - sockdata:/sock
      - ssldata:/etc/nginx/certs

  varnish:
    build: images/varnish
    ports:
      - "80:6081"
      - "6085:6085"
    depends_on:
      - app
    environment:
      BACKENDS: "app"
      BACKENDS_PORT: "8080"
      DNS_ENABLED: "true"
      BACKENDS_PROBE_INTERVAL: "3s"
      BACKENDS_PROBE_TIMEOUT: "1s"
      BACKENDS_PROBE_WINDOW: "3"
      BACKENDS_PROBE_THRESHOLD: "2"
      DASHBOARD_USER: "admin"
      DASHBOARD_PASSWORD: "admin"
      DASHBOARD_SERVERS: "varnish"
      DASHBOARD_DNS_ENABLED: "true"

  phpfpm:
    image: markoshust/magento-php:7.4-fpm-8
    links:
      - db
    volumes: *appvolumes

  db:
    image: mariadb:10.4
    command: --max_allowed_packet=64M
    ports:
      - "3306:3306"
    env_file: env/db.env
    volumes:
      - dbdata:/var/lib/mysql

  redis:
    image: redis:5.0-alpine

  elasticsearch:
    image: markoshust/magento-elasticsearch:7.9.3-0
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - "discovery.type=single-node"
      # Set custom heap size to avoid memory errors
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
      # Avoid test failures due to small disks
      # More info at https://github.com/markshust/docker-magento/issues/488
      - "cluster.routing.allocation.disk.threshold_enabled=false"
      - "index.blocks.read_only_allow_delete"

  rabbitmq:
    image: rabbitmq:3.8.22-management-alpine
    ports:
      - "15672:15672"
      - "5672:5672"
    volumes:
      - rabbitmqdata:/var/lib/rabbitmq

  ## Disabling cron by default as it uses higher CPU, enable if needed
  #cron:
  #  image: markoshust/magento-php:7.4-fpm-8
  #  user: root
  #  command: /usr/local/bin/cronstart
  #  tty: true
  #  links:
  #    - db
  #  volumes: *appvolumes

volumes:
  appdata:
  dbdata:
  rabbitmqdata:
  sockdata:
  ssldata:
